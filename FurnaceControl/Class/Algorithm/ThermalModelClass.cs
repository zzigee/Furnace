using System;
using System.Linq;

namespace FurnaceControl
{
    internal class ThermalModelClass : TimerClass
    {
        private readonly MainClass m_MainClass;

        private double dTotalCalTime = 0.0;

        public ThermalModelClass(MainClass mc, int timer_interval)
        {
            this.m_MainClass = mc;
            this.Start(timer_interval, "ThermalModelClassTimer");
        }

        double getLagrange(double[] x, double[] y, int n, double t)
        {
            int i, j;
            double s, p;   

            s = 0.0;

            for (i = 0; i < n; i++)
            {
                p = y[i];
                for (j = 0; j < n; j++)
                {
                    if (i != j)
                    {
                        p = p * (t - x[j]) / (x[i] - x[j]);
                    }
                }
                s = s + p;
            }
            return s;
        }
        
        /*********************************************************************************************
         *********************************************************************************************
         * 열모델 계산 코드 
         *********************************************************************************************
         *********************************************************************************************/
        public void calThermalModel_sus304()
        {
            this.m_MainClass.m_MainForm.Set_txtDanjin_Current_Date(DateTime.Now.ToString());
            TimeSpan result = DateTime.Now - this.m_MainClass.m_Define_Class.dateDataLoggingStartTime;
            this.m_MainClass.m_MainForm.Set_txtDanjin_Operation_Time("[" + this.m_MainClass.m_Define_Class.nDataLoggingIndex + "]" + result.ToString(@"h\:mm\:ss"));

            if (this.m_MainClass.m_Define_Class.nDataLoggingIndex > this.m_MainClass.m_Define_Class.MAX_BILLET_IN_FURNACE)
            {
                this.m_MainClass.m_MainForm.ShowMessageBox("당진 테스트베드 측정 데이터 갯수가 최대 갯수를 초과하였습니다. \n\r측정을 중지합니다.");
                this.m_MainClass.m_MainForm.btnDataLogging.BackColor = System.Drawing.Color.LightGray;
                this.m_MainClass.m_Define_Class.isDataLogging = false;
            }


            int nPreditBilletTemp; //예측 소재 온도
            float nZoneTemprature = this.m_MainClass.stFURNACE_REALTIME_INFORMATION.nZone_Temperature[0];     // 현재 TC 온도 

            int num_cp = 10;
            int num_h = 25;
            int num_f = 25;
            int num_fn = 601;
            int num_wp = 601;
            float dt; // unit sec 
            float dens, thick;
            float sigma, eps;
            float temp_wp_init;
            float cp_s, h_s, f_s;

            //비열 등 계수 상수 값 대입, 이후 DB에서 읽어올 내용 //테스트 용
            float[,] cp_sus304 = new float[,] { { 0, 0.41f }, { 86, 0.4339f }, { 392, 0.4947f }, { 752, 0.5298f }, { 1112, 0.5637f }, { 1292, 0.6020f }, { 1472, 0.6421f }, { 1652, 0.6562f }, { 1832, 0.6383f }, { 2012, 0.6582f } };

//            float[,] cp_sus304 = new float[,] { { 16, 0.4594f }, { 38, 0.46819f }, { 93, 0.48953f }, { 149, 0.51212f }, { 204, 0.53555f }, { 260, 0.55354f }, { 316, 0.56693f }, { 371, 0.59329f }, { 427, 0.6276f }, { 482, 0.66735f }, { 538, 0.71086f }, { 593, 0.75856f }, { 649, 0.81965f }, { 704, 0.97487f }, { 732, 1.17152f }, { 760, 0.99788f }, { 816, 0.88533f }, { 871, 0.79705f }, { 927, 0.76065f }, { 982, 0.705f }, { 1038, 0.66693f }, { 1093, 0.64894f }, { 1149, 0.6481f }, { 1204, 0.65061f }, { 1260, 0.66442f }, { 1316, 0.71295f } };

            float[,] h_sus304 = new float[,] { { 0, 80f }, { 100, 80f }, { 200, 80f }, { 300, 80f }, { 301, 80f }, { 400, 80f }, { 500, 80f }, { 600, 80f }, { 601, 80f }, { 700, 80f }, { 800, 80f }, { 900, 80f }, { 901, 80f }, { 1000, 80f }, { 1100, 80f }, { 1200, 80f }, { 1201, 80f }, { 1300, 80f }, { 1400, 80f }, { 1500, 80f }, { 1600, 80f }, { 1700, 80f }, { 1800, 80f }, { 1900, 80f }, { 2000, 80f } };


            float[,] f_sus304 = new float[,] { { 0, 0.5f }, { 100, 0.5f }, { 200, 0.5f }, { 300, 0.5f }, { 301, 0.5f }, { 400, 0.5f }, { 500, 0.5f }, { 600, 0.5f }, { 601, 0.5f }, { 700, 0.5f }, { 800, 0.5f }, { 900, 0.5f }, { 901, 0.5f }, { 1000, 0.5f }, { 1100, 0.5f }, { 1200, 0.5f }, { 1201, 0.5f }, { 1300, 0.5f }, { 1400, 0.5f }, { 1500, 0.5f }, { 1600, 0.5f }, { 1700, 0.5f }, { 1800, 0.5f }, { 1900, 0.5f }, { 2000, 0.5f } };

                  
            //TC input data
//(수정전)            float[,] fn = new float[,] { { 0, 20f }, { 1, 28f }, { 2, 36f }, { 3, 44f }, { 4, 52f }, { 5, 60f }, { 6, 68f }, { 7, 76f }, { 8, 84f }, { 9, 92f }, { 10, 100f }, { 11, 108f }, { 12, 116f }, { 13, 124f }, { 14, 132f }, { 15, 140f }, { 16, 148f }, { 17, 156f }, { 18, 164f }, { 19, 172f }, { 20, 180f }, { 21, 188f }, { 22, 196f }, { 23, 204f }, { 24, 212f }, { 25, 220f }, { 26, 228f }, { 27, 236f }, { 28, 244f }, { 29, 252f }, { 30, 260f }, { 31, 268f }, { 32, 276f }, { 33, 284f }, { 34, 292f }, { 35, 300f }, { 36, 308f }, { 37, 316f }, { 38, 324f }, { 39, 332f }, { 40, 340f }, { 41, 348f }, { 42, 356f }, { 43, 364f }, { 44, 372f }, { 45, 380f }, { 46, 388f }, { 47, 396f }, { 48, 404f }, { 49, 412f }, { 50, 420f }, { 51, 428f }, { 52, 436f }, { 53, 444f }, { 54, 452f }, { 55, 460f }, { 56, 468f }, { 57, 476f }, { 58, 484f }, { 59, 492f }, { 60, 500f }, { 61, 500f }, { 62, 500f }, { 63, 500f }, { 64, 500f }, { 65, 500f }, { 66, 500f }, { 67, 500f }, { 68, 500f }, { 69, 500f }, { 70, 500f }, { 71, 500f }, { 72, 500f }, { 73, 500f }, { 74, 500f }, { 75, 500f }, { 76, 500f }, { 77, 500f }, { 78, 500f }, { 79, 500f }, { 80, 500f }, { 81, 500f }, { 82, 500f }, { 83, 500f }, { 84, 500f }, { 85, 500f }, { 86, 500f }, { 87, 500f }, { 88, 500f }, { 89, 500f }, { 90, 500f }, { 91, 505f }, { 92, 510f }, { 93, 515f }, { 94, 520f }, { 95, 525f }, { 96, 530f }, { 97, 535f }, { 98, 540f }, { 99, 545f }, { 100, 550f }, { 101, 555f }, { 102, 560f }, { 103, 565f }, { 104, 570f }, { 105, 575f }, { 106, 580f }, { 107, 585f }, { 108, 590f }, { 109, 595f }, { 110, 600f }, { 111, 605f }, { 112, 610f }, { 113, 615f }, { 114, 620f }, { 115, 625f }, { 116, 630f }, { 117, 635f }, { 118, 640f }, { 119, 645f }, { 120, 650f }, { 121, 655f }, { 122, 660f }, { 123, 665f }, { 124, 670f }, { 125, 675f }, { 126, 680f }, { 127, 685f }, { 128, 690f }, { 129, 695f }, { 130, 700f }, { 131, 705f }, { 132, 710f }, { 133, 715f }, { 134, 720f }, { 135, 725f }, { 136, 730f }, { 137, 735f }, { 138, 740f }, { 139, 745f }, { 140, 750f }, { 141, 755f }, { 142, 760f }, { 143, 765f }, { 144, 770f }, { 145, 775f }, { 146, 780f }, { 147, 785f }, { 148, 790f }, { 149, 795f }, { 150, 800f }, { 151, 800f }, { 152, 800f }, { 153, 800f }, { 154, 800f }, { 155, 800f }, { 156, 800f }, { 157, 800f }, { 158, 800f }, { 159, 800f }, { 160, 800f }, { 161, 800f }, { 162, 800f }, { 163, 800f }, { 164, 800f }, { 165, 800f }, { 166, 800f }, { 167, 800f }, { 168, 800f }, { 169, 800f }, { 170, 800f }, { 171, 800f }, { 172, 800f }, { 173, 800f }, { 174, 800f }, { 175, 800f }, { 176, 800f }, { 177, 800f }, { 178, 800f }, { 179, 800f }, { 180, 800f }, { 181, 806f }, { 182, 813f }, { 183, 820f }, { 184, 826f }, { 185, 833f }, { 186, 840f }, { 187, 846f }, { 188, 853f }, { 189, 860f }, { 190, 866f }, { 191, 873f }, { 192, 880f }, { 193, 886f }, { 194, 893f }, { 195, 900f }, { 196, 906f }, { 197, 913f }, { 198, 920f }, { 199, 926f }, { 200, 933f }, { 201, 940f }, { 202, 946f }, { 203, 953f }, { 204, 960f }, { 205, 966f }, { 206, 973f }, { 207, 980f }, { 208, 986f }, { 209, 993f }, { 210, 1000f }, { 211, 1003f }, { 212, 1006f }, { 213, 1009f }, { 214, 1013f }, { 215, 1016f }, { 216, 1019f }, { 217, 1023f }, { 218, 1026f }, { 219, 1029f }, { 220, 1033f }, { 221, 1036f }, { 222, 1039f }, { 223, 1043f }, { 224, 1046f }, { 225, 1049f }, { 226, 1053f }, { 227, 1056f }, { 228, 1059f }, { 229, 1063f }, { 230, 1066f }, { 231, 1069f }, { 232, 1073f }, { 233, 1076f }, { 234, 1079f }, { 235, 1083f }, { 236, 1086f }, { 237, 1089f }, { 238, 1093f }, { 239, 1096f }, { 240, 1100f }, { 241, 1102f }, { 242, 1105f }, { 243, 1108f }, { 244, 1110f }, { 245, 1113f }, { 246, 1116f }, { 247, 1118f }, { 248, 1121f }, { 249, 1124f }, { 250, 1126f }, { 251, 1129f }, { 252, 1132f }, { 253, 1134f }, { 254, 1137f }, { 255, 1140f }, { 256, 1142f }, { 257, 1145f }, { 258, 1148f }, { 259, 1150f }, { 260, 1153f }, { 261, 1156f }, { 262, 1158f }, { 263, 1161f }, { 264, 1164f }, { 265, 1166f }, { 266, 1169f }, { 267, 1172f }, { 268, 1174f }, { 269, 1177f }, { 270, 1180f }, { 271, 1182f }, { 272, 1184f }, { 273, 1186f }, { 274, 1189f }, { 275, 1191f }, { 276, 1193f }, { 277, 1196f }, { 278, 1198f }, { 279, 1200f }, { 280, 1203f }, { 281, 1205f }, { 282, 1207f }, { 283, 1210f }, { 284, 1212f }, { 285, 1214f }, { 286, 1217f }, { 287, 1219f }, { 288, 1221f }, { 289, 1224f }, { 290, 1226f }, { 291, 1228f }, { 292, 1231f }, { 293, 1233f }, { 294, 1235f }, { 295, 1238f }, { 296, 1240f }, { 297, 1242f }, { 298, 1245f }, { 299, 1247f }, { 300, 1250f }, { 301, 1250f }, { 302, 1250f }, { 303, 1250f }, { 304, 1250f }, { 305, 1250f }, { 306, 1250f }, { 307, 1250f }, { 308, 1250f }, { 309, 1250f }, { 310, 1250f }, { 311, 1250f }, { 312, 1250f }, { 313, 1250f }, { 314, 1250f }, { 315, 1250f }, { 316, 1250f }, { 317, 1250f }, { 318, 1250f }, { 319, 1250f }, { 320, 1250f }, { 321, 1250f }, { 322, 1250f }, { 323, 1250f }, { 324, 1250f }, { 325, 1250f }, { 326, 1250f }, { 327, 1250f }, { 328, 1250f }, { 329, 1250f }, { 330, 1250f }, { 331, 1250f }, { 332, 1250f }, { 333, 1250f }, { 334, 1250f }, { 335, 1250f }, { 336, 1250f }, { 337, 1250f }, { 338, 1250f }, { 339, 1250f }, { 340, 1250f }, { 341, 1250f }, { 342, 1250f }, { 343, 1250f }, { 344, 1250f }, { 345, 1250f }, { 346, 1250f }, { 347, 1250f }, { 348, 1250f }, { 349, 1250f }, { 350, 1250f }, { 351, 1250f }, { 352, 1250f }, { 353, 1250f }, { 354, 1250f }, { 355, 1250f }, { 356, 1250f }, { 357, 1250f }, { 358, 1250f }, { 359, 1250f }, { 360, 1250f }, { 361, 1250f }, { 362, 1250f }, { 363, 1250f }, { 364, 1250f }, { 365, 1250f }, { 366, 1250f }, { 367, 1250f }, { 368, 1250f }, { 369, 1250f }, { 370, 1250f }, { 371, 1250f }, { 372, 1250f }, { 373, 1250f }, { 374, 1250f }, { 375, 1250f }, { 376, 1250f }, { 377, 1250f }, { 378, 1250f }, { 379, 1250f }, { 380, 1250f }, { 381, 1250f }, { 382, 1250f }, { 383, 1250f }, { 384, 1250f }, { 385, 1250f }, { 386, 1250f }, { 387, 1250f }, { 388, 1250f }, { 389, 1250f }, { 390, 1250f }, { 391, 1250f }, { 392, 1250f }, { 393, 1250f }, { 394, 1250f }, { 395, 1250f }, { 396, 1250f }, { 397, 1250f }, { 398, 1250f }, { 399, 1250f }, { 400, 1250f }, { 401, 1250f }, { 402, 1250f }, { 403, 1250f }, { 404, 1250f }, { 405, 1250f }, { 406, 1250f }, { 407, 1250f }, { 408, 1250f }, { 409, 1250f }, { 410, 1250f }, { 411, 1250f }, { 412, 1250f }, { 413, 1250f }, { 414, 1250f }, { 415, 1250f }, { 416, 1250f }, { 417, 1250f }, { 418, 1250f }, { 419, 1250f }, { 420, 1250f }, { 421, 1250f }, { 422, 1250f }, { 423, 1250f }, { 424, 1250f }, { 425, 1250f }, { 426, 1250f }, { 427, 1250f }, { 428, 1250f }, { 429, 1250f }, { 430, 1250f }, { 431, 1250f }, { 432, 1250f }, { 433, 1250f }, { 434, 1250f }, { 435, 1250f }, { 436, 1250f }, { 437, 1250f }, { 438, 1250f }, { 439, 1250f }, { 440, 1250f }, { 441, 1250f }, { 442, 1250f }, { 443, 1250f }, { 444, 1250f }, { 445, 1250f }, { 446, 1250f }, { 447, 1250f }, { 448, 1250f }, { 449, 1250f }, { 450, 1250f }, { 451, 1250f }, { 452, 1250f }, { 453, 1250f }, { 454, 1250f }, { 455, 1250f }, { 456, 1250f }, { 457, 1250f }, { 458, 1250f }, { 459, 1250f }, { 460, 1250f }, { 461, 1250f }, { 462, 1250f }, { 463, 1250f }, { 464, 1250f }, { 465, 1250f }, { 466, 1250f }, { 467, 1250f }, { 468, 1250f }, { 469, 1250f }, { 470, 1250f }, { 471, 1250f }, { 472, 1250f }, { 473, 1250f }, { 474, 1250f }, { 475, 1250f }, { 476, 1250f }, { 477, 1250f }, { 478, 1250f }, { 479, 1250f }, { 480, 1250f }, { 481, 1250f }, { 482, 1250f }, { 483, 1250f }, { 484, 1250f }, { 485, 1250f }, { 486, 1250f }, { 487, 1250f }, { 488, 1250f }, { 489, 1250f }, { 490, 1250f }, { 491, 1250f }, { 492, 1250f }, { 493, 1250f }, { 494, 1250f }, { 495, 1250f }, { 496, 1250f }, { 497, 1250f }, { 498, 1250f }, { 499, 1250f }, { 500, 1250f }, { 501, 1250f }, { 502, 1250f }, { 503, 1250f }, { 504, 1250f }, { 505, 1250f }, { 506, 1250f }, { 507, 1250f }, { 508, 1250f }, { 509, 1250f }, { 510, 1250f }, { 511, 1250f }, { 512, 1250f }, { 513, 1250f }, { 514, 1250f }, { 515, 1250f }, { 516, 1250f }, { 517, 1250f }, { 518, 1250f }, { 519, 1250f }, { 520, 1250f }, { 521, 1250f }, { 522, 1250f }, { 523, 1250f }, { 524, 1250f }, { 525, 1250f }, { 526, 1250f }, { 527, 1250f }, { 528, 1250f }, { 529, 1250f }, { 530, 1250f }, { 531, 1250f }, { 532, 1250f }, { 533, 1250f }, { 534, 1250f }, { 535, 1250f }, { 536, 1250f }, { 537, 1250f }, { 538, 1250f }, { 539, 1250f }, { 540, 1250f }, { 541, 1250f }, { 542, 1250f }, { 543, 1250f }, { 544, 1250f }, { 545, 1250f }, { 546, 1250f }, { 547, 1250f }, { 548, 1250f }, { 549, 1250f }, { 550, 1250f }, { 551, 1250f }, { 552, 1250f }, { 553, 1250f }, { 554, 1250f }, { 555, 1250f }, { 556, 1250f }, { 557, 1250f }, { 558, 1250f }, { 559, 1250f }, { 560, 1250f }, { 561, 1250f }, { 562, 1250f }, { 563, 1250f }, { 564, 1250f }, { 565, 1250f }, { 566, 1250f }, { 567, 1250f }, { 568, 1250f }, { 569, 1250f }, { 570, 1250f }, { 571, 1250f }, { 572, 1250f }, { 573, 1250f }, { 574, 1250f }, { 575, 1250f }, { 576, 1250f }, { 577, 1250f }, { 578, 1250f }, { 579, 1250f }, { 580, 1250f }, { 581, 1250f }, { 582, 1250f }, { 583, 1250f }, { 584, 1250f }, { 585, 1250f }, { 586, 1250f }, { 587, 1250f }, { 588, 1250f }, { 589, 1250f }, { 590, 1250f }, { 591, 1250f }, { 592, 1250f }, { 593, 1250f }, { 594, 1250f }, { 595, 1250f }, { 596, 1250f }, { 597, 1250f }, { 598, 1250f }, { 599, 1250f }, { 600, 1250f } };
            float[,] fn = new float[,] { { 0, 20f }, { 60, 28f }, { 120, 36f }, { 180, 44f }, { 240, 52f }, { 300, 60f }, { 360, 68f }, { 420, 76f }, { 480, 84f }, { 540, 92f }, { 600, 100f }, { 660, 108f }, { 720, 116f }, { 780, 124f }, { 840, 132f }, { 900, 140f }, { 960, 148f }, { 1020, 156f }, { 1080, 164f }, { 1140, 172f }, { 1200, 180f }, { 1260, 188f }, { 1320, 196f }, { 1380, 204f }, { 1440, 212f }, { 1500, 220f }, { 1560, 228f }, { 1620, 236f }, { 1680, 244f }, { 1740, 252f }, { 1800, 260f }, { 1860, 268f }, { 1920, 276f }, { 1980, 284f }, { 2040, 292f }, { 2100, 300f }, { 2160, 308f }, { 2220, 316f }, { 2280, 324f }, { 2340, 332f }, { 2400, 340f }, { 2460, 348f }, { 2520, 356f }, { 2580, 364f }, { 2640, 372f }, { 2700, 380f }, { 2760, 388f }, { 2820, 396f }, { 2880, 404f }, { 2940, 412f }, { 3000, 420f }, { 3060, 428f }, { 3120, 436f }, { 3180, 444f }, { 3240, 452f }, { 3300, 460f }, { 3360, 468f }, { 3420, 476f }, { 3480, 484f }, { 3540, 492f }, { 3600, 500f }, { 3660, 500f }, { 3720, 500f }, { 3780, 500f }, { 3840, 500f }, { 3900, 500f }, { 3960, 500f }, { 4020, 500f }, { 4080, 500f }, { 4140, 500f }, { 4200, 500f }, { 4260, 500f }, { 4320, 500f }, { 4380, 500f }, { 4440, 500f }, { 4500, 500f }, { 4560, 500f }, { 4620, 500f }, { 4680, 500f }, { 4740, 500f }, { 4800, 500f }, { 4860, 500f }, { 4920, 500f }, { 4980, 500f }, { 5040, 500f }, { 5100, 500f }, { 5160, 500f }, { 5220, 500f }, { 5280, 500f }, { 5340, 500f }, { 5400, 500f }, { 5460, 505f }, { 5520, 510f }, { 5580, 515f }, { 5640, 520f }, { 5700, 525f }, { 5760, 530f }, { 5820, 535f }, { 5880, 540f }, { 5940, 545f }, { 6000, 550f }, { 6060, 555f }, { 6120, 560f }, { 6180, 565f }, { 6240, 570f }, { 6300, 575f }, { 6360, 580f }, { 6420, 585f }, { 6480, 590f }, { 6540, 595f }, { 6600, 600f }, { 6660, 605f }, { 6720, 610f }, { 6780, 615f }, { 6840, 620f }, { 6900, 625f }, { 6960, 630f }, { 7020, 635f }, { 7080, 640f }, { 7140, 645f }, { 7200, 650f }, { 7260, 655f }, { 7320, 660f }, { 7380, 665f }, { 7440, 670f }, { 7500, 675f }, { 7560, 680f }, { 7620, 685f }, { 7680, 690f }, { 7740, 695f }, { 7800, 700f }, { 7860, 705f }, { 7920, 710f }, { 7980, 715f }, { 8040, 720f }, { 8100, 725f }, { 8160, 730f }, { 8220, 735f }, { 8280, 740f }, { 8340, 745f }, { 8400, 750f }, { 8460, 755f }, { 8520, 760f }, { 8580, 765f }, { 8640, 770f }, { 8700, 775f }, { 8760, 780f }, { 8820, 785f }, { 8880, 790f }, { 8940, 795f }, { 9000, 800f }, { 9060, 800f }, { 9120, 800f }, { 9180, 800f }, { 9240, 800f }, { 9300, 800f }, { 9360, 800f }, { 9420, 800f }, { 9480, 800f }, { 9540, 800f }, { 9600, 800f }, { 9660, 800f }, { 9720, 800f }, { 9780, 800f }, { 9840, 800f }, { 9900, 800f }, { 9960, 800f }, { 10020, 800f }, { 10080, 800f }, { 10140, 800f }, { 10200, 800f }, { 10260, 800f }, { 10320, 800f }, { 10380, 800f }, { 10440, 800f }, { 10500, 800f }, { 10560, 800f }, { 10620, 800f }, { 10680, 800f }, { 10740, 800f }, { 10800, 800f }, { 10860, 806f }, { 10920, 813f }, { 10980, 820f }, { 11040, 826f }, { 11100, 833f }, { 11160, 840f }, { 11220, 846f }, { 11280, 853f }, { 11340, 860f }, { 11400, 866f }, { 11460, 873f }, { 11520, 880f }, { 11580, 886f }, { 11640, 893f }, { 11700, 900f }, { 11760, 906f }, { 11820, 913f }, { 11880, 920f }, { 11940, 926f }, { 12000, 933f }, { 12060, 940f }, { 12120, 946f }, { 12180, 953f }, { 12240, 960f }, { 12300, 966f }, { 12360, 973f }, { 12420, 980f }, { 12480, 986f }, { 12540, 993f }, { 12600, 1000f }, { 12660, 1003f }, { 12720, 1006f }, { 12780, 1009f }, { 12840, 1013f }, { 12900, 1016f }, { 12960, 1019f }, { 13020, 1023f }, { 13080, 1026f }, { 13140, 1029f }, { 13200, 1033f }, { 13260, 1036f }, { 13320, 1039f }, { 13380, 1043f }, { 13440, 1046f }, { 13500, 1049f }, { 13560, 1053f }, { 13620, 1056f }, { 13680, 1059f }, { 13740, 1063f }, { 13800, 1066f }, { 13860, 1069f }, { 13920, 1073f }, { 13980, 1076f }, { 14040, 1079f }, { 14100, 1083f }, { 14160, 1086f }, { 14220, 1089f }, { 14280, 1093f }, { 14340, 1096f }, { 14400, 1100f }, { 14460, 1102f }, { 14520, 1105f }, { 14580, 1108f }, { 14640, 1110f }, { 14700, 1113f }, { 14760, 1116f }, { 14820, 1118f }, { 14880, 1121f }, { 14940, 1124f }, { 15000, 1126f }, { 15060, 1129f }, { 15120, 1132f }, { 15180, 1134f }, { 15240, 1137f }, { 15300, 1140f }, { 15360, 1142f }, { 15420, 1145f }, { 15480, 1148f }, { 15540, 1150f }, { 15600, 1153f }, { 15660, 1156f }, { 15720, 1158f }, { 15780, 1161f }, { 15840, 1164f }, { 15900, 1166f }, { 15960, 1169f }, { 16020, 1172f }, { 16080, 1174f }, { 16140, 1177f }, { 16200, 1180f }, { 16260, 1182f }, { 16320, 1184f }, { 16380, 1186f }, { 16440, 1189f }, { 16500, 1191f }, { 16560, 1193f }, { 16620, 1196f }, { 16680, 1198f }, { 16740, 1200f }, { 16800, 1203f }, { 16860, 1205f }, { 16920, 1207f }, { 16980, 1210f }, { 17040, 1212f }, { 17100, 1214f }, { 17160, 1217f }, { 17220, 1219f }, { 17280, 1221f }, { 17340, 1224f }, { 17400, 1226f }, { 17460, 1228f }, { 17520, 1231f }, { 17580, 1233f }, { 17640, 1235f }, { 17700, 1238f }, { 17760, 1240f }, { 17820, 1242f }, { 17880, 1245f }, { 17940, 1247f }, { 18000, 1250f }, { 18060, 1250f }, { 18120, 1250f }, { 18180, 1250f }, { 18240, 1250f }, { 18300, 1250f }, { 18360, 1250f }, { 18420, 1250f }, { 18480, 1250f }, { 18540, 1250f }, { 18600, 1250f }, { 18660, 1250f }, { 18720, 1250f }, { 18780, 1250f }, { 18840, 1250f }, { 18900, 1250f }, { 18960, 1250f }, { 19020, 1250f }, { 19080, 1250f }, { 19140, 1250f }, { 19200, 1250f }, { 19260, 1250f }, { 19320, 1250f }, { 19380, 1250f }, { 19440, 1250f }, { 19500, 1250f }, { 19560, 1250f }, { 19620, 1250f }, { 19680, 1250f }, { 19740, 1250f }, { 19800, 1250f }, { 19860, 1250f }, { 19920, 1250f }, { 19980, 1250f }, { 20040, 1250f }, { 20100, 1250f }, { 20160, 1250f }, { 20220, 1250f }, { 20280, 1250f }, { 20340, 1250f }, { 20400, 1250f }, { 20460, 1250f }, { 20520, 1250f }, { 20580, 1250f }, { 20640, 1250f }, { 20700, 1250f }, { 20760, 1250f }, { 20820, 1250f }, { 20880, 1250f }, { 20940, 1250f }, { 21000, 1250f }, { 21060, 1250f }, { 21120, 1250f }, { 21180, 1250f }, { 21240, 1250f }, { 21300, 1250f }, { 21360, 1250f }, { 21420, 1250f }, { 21480, 1250f }, { 21540, 1250f }, { 21600, 1250f }, { 21660, 1250f }, { 21720, 1250f }, { 21780, 1250f }, { 21840, 1250f }, { 21900, 1250f }, { 21960, 1250f }, { 22020, 1250f }, { 22080, 1250f }, { 22140, 1250f }, { 22200, 1250f }, { 22260, 1250f }, { 22320, 1250f }, { 22380, 1250f }, { 22440, 1250f }, { 22500, 1250f }, { 22560, 1250f }, { 22620, 1250f }, { 22680, 1250f }, { 22740, 1250f }, { 22800, 1250f }, { 22860, 1250f }, { 22920, 1250f }, { 22980, 1250f }, { 23040, 1250f }, { 23100, 1250f }, { 23160, 1250f }, { 23220, 1250f }, { 23280, 1250f }, { 23340, 1250f }, { 23400, 1250f }, { 23460, 1250f }, { 23520, 1250f }, { 23580, 1250f }, { 23640, 1250f }, { 23700, 1250f }, { 23760, 1250f }, { 23820, 1250f }, { 23880, 1250f }, { 23940, 1250f }, { 24000, 1250f }, { 24060, 1250f }, { 24120, 1250f }, { 24180, 1250f }, { 24240, 1250f }, { 24300, 1250f }, { 24360, 1250f }, { 24420, 1250f }, { 24480, 1250f }, { 24540, 1250f }, { 24600, 1250f }, { 24660, 1250f }, { 24720, 1250f }, { 24780, 1250f }, { 24840, 1250f }, { 24900, 1250f }, { 24960, 1250f }, { 25020, 1250f }, { 25080, 1250f }, { 25140, 1250f }, { 25200, 1250f }, { 25260, 1250f }, { 25320, 1250f }, { 25380, 1250f }, { 25440, 1250f }, { 25500, 1250f }, { 25560, 1250f }, { 25620, 1250f }, { 25680, 1250f }, { 25740, 1250f }, { 25800, 1250f }, { 25860, 1250f }, { 25920, 1250f }, { 25980, 1250f }, { 26040, 1250f }, { 26100, 1250f }, { 26160, 1250f }, { 26220, 1250f }, { 26280, 1250f }, { 26340, 1250f }, { 26400, 1250f }, { 26460, 1250f }, { 26520, 1250f }, { 26580, 1250f }, { 26640, 1250f }, { 26700, 1250f }, { 26760, 1250f }, { 26820, 1250f }, { 26880, 1250f }, { 26940, 1250f }, { 27000, 1250f }, { 27060, 1250f }, { 27120, 1250f }, { 27180, 1250f }, { 27240, 1250f }, { 27300, 1250f }, { 27360, 1250f }, { 27420, 1250f }, { 27480, 1250f }, { 27540, 1250f }, { 27600, 1250f }, { 27660, 1250f }, { 27720, 1250f }, { 27780, 1250f }, { 27840, 1250f }, { 27900, 1250f }, { 27960, 1250f }, { 28020, 1250f }, { 28080, 1250f }, { 28140, 1250f }, { 28200, 1250f }, { 28260, 1250f }, { 28320, 1250f }, { 28380, 1250f }, { 28440, 1250f }, { 28500, 1250f }, { 28560, 1250f }, { 28620, 1250f }, { 28680, 1250f }, { 28740, 1250f }, { 28800, 1250f }, { 28860, 1250f }, { 28920, 1250f }, { 28980, 1250f }, { 29040, 1250f }, { 29100, 1250f }, { 29160, 1250f }, { 29220, 1250f }, { 29280, 1250f }, { 29340, 1250f }, { 29400, 1250f }, { 29460, 1250f }, { 29520, 1250f }, { 29580, 1250f }, { 29640, 1250f }, { 29700, 1250f }, { 29760, 1250f }, { 29820, 1250f }, { 29880, 1250f }, { 29940, 1250f }, { 30000, 1250f }, { 30060, 1250f }, { 30120, 1250f }, { 30180, 1250f }, { 30240, 1250f }, { 30300, 1250f }, { 30360, 1250f }, { 30420, 1250f }, { 30480, 1250f }, { 30540, 1250f }, { 30600, 1250f }, { 30660, 1250f }, { 30720, 1250f }, { 30780, 1250f }, { 30840, 1250f }, { 30900, 1250f }, { 30960, 1250f }, { 31020, 1250f }, { 31080, 1250f }, { 31140, 1250f }, { 31200, 1250f }, { 31260, 1250f }, { 31320, 1250f }, { 31380, 1250f }, { 31440, 1250f }, { 31500, 1250f }, { 31560, 1250f }, { 31620, 1250f }, { 31680, 1250f }, { 31740, 1250f }, { 31800, 1250f }, { 31860, 1250f }, { 31920, 1250f }, { 31980, 1250f }, { 32040, 1250f }, { 32100, 1250f }, { 32160, 1250f }, { 32220, 1250f }, { 32280, 1250f }, { 32340, 1250f }, { 32400, 1250f }, { 32460, 1250f }, { 32520, 1250f }, { 32580, 1250f }, { 32640, 1250f }, { 32700, 1250f }, { 32760, 1250f }, { 32820, 1250f }, { 32880, 1250f }, { 32940, 1250f }, { 33000, 1250f }, { 33060, 1250f }, { 33120, 1250f }, { 33180, 1250f }, { 33240, 1250f }, { 33300, 1250f }, { 33360, 1250f }, { 33420, 1250f }, { 33480, 1250f }, { 33540, 1250f }, { 33600, 1250f }, { 33660, 1250f }, { 33720, 1250f }, { 33780, 1250f }, { 33840, 1250f }, { 33900, 1250f }, { 33960, 1250f }, { 34020, 1250f }, { 34080, 1250f }, { 34140, 1250f }, { 34200, 1250f }, { 34260, 1250f }, { 34320, 1250f }, { 34380, 1250f }, { 34440, 1250f }, { 34500, 1250f }, { 34560, 1250f }, { 34620, 1250f }, { 34680, 1250f }, { 34740, 1250f }, { 34800, 1250f }, { 34860, 1250f }, { 34920, 1250f }, { 34980, 1250f }, { 35040, 1250f }, { 35100, 1250f }, { 35160, 1250f }, { 35220, 1250f }, { 35280, 1250f }, { 35340, 1250f }, { 35400, 1250f }, { 35460, 1250f }, { 35520, 1250f }, { 35580, 1250f }, { 35640, 1250f }, { 35700, 1250f }, { 35760, 1250f }, { 35820, 1250f }, { 35880, 1250f }, { 35940, 1250f }, { 36000, 1250f } };


            //상수 값 대입, 이후 DB에서 읽어올 내용
            dt = 60.0f;
            dens = 7851.354f;
            thick = 0.5f;
            sigma = 0.00000008f;
            eps = 0.2f;
            temp_wp_init = 50;

            cp_s = cp_sus304[0, 0];
            h_s = h_sus304[0, 0];
            f_s = f_sus304[0, 0];


            float fPreBilletTemp;                                               // 이전 빌렛 온도 
            int idx = this.m_MainClass.m_Define_Class.nDataLoggingIndex;        // 현재 측정 인덱스 (최대치는 MAX_BILLET_IN_FURNACE  참조) 

            if (this.m_MainClass.m_Define_Class.nDataLoggingIndex == 0)
            {
                // 임의로 정의한 초기 빌렛 온도 
                fPreBilletTemp = 50.0f;
            }
            else
            {
                // 이전 계산된 빌렛 온도 
                fPreBilletTemp = this.m_MainClass.stBILLET_INFOMATION[this.m_MainClass.m_Define_Class.nDataLoggingIndex - 1].nBillet_Predict_Current_Billet_Temperature; //sus304??
            }

            // 파라메타 보간 
            for (int k = 0; k < num_cp - 1; k++)
            {
                for (int j = 0; j < num_cp - 1; j++)
                {
                    if ((fPreBilletTemp >= cp_sus304[j, 0]) && (fPreBilletTemp <= cp_sus304[j + 1, 0]))
                    {
                        cp_s = cp_sus304[j, 1] + (cp_sus304[j + 1, 1] - cp_sus304[j, 1]) / (cp_sus304[j + 1, 0] - cp_sus304[j, 0]) * (fPreBilletTemp - cp_sus304[j, 0]);
                    }
                }
                for (int i = 0; i < num_h - 1; i++)
                {
                    if ((fPreBilletTemp >= h_sus304[i, 0]) && (fPreBilletTemp <= h_sus304[i + 1, 0]))
                    {
                        h_s = h_sus304[i, 1] + (h_sus304[i + 1, 1] - h_sus304[i, 1]) / (h_sus304[i + 1, 0] - h_sus304[i, 0]) * (fPreBilletTemp - h_sus304[i, 0]);
                    }
                }
                for (int j = 0; j < num_f - 1; j++)
                {
                    if ((fPreBilletTemp >= f_sus304[j, 0]) && (fPreBilletTemp <= f_sus304[j + 1, 0]))
                    {
                        f_s = f_sus304[j, 1] + (f_sus304[j + 1, 1] - f_sus304[j, 1]) / (f_sus304[j + 1, 0] - f_sus304[j, 0]) * (fPreBilletTemp - f_sus304[j, 0]);
                    }
                }
            }

            float ff = (float)(Math.Pow(fn[idx, 1], 4.0));     // 
            float fff = (float)(Math.Pow((fPreBilletTemp + 273), 4.0)); // 
            float fnfn = fn[idx, 1] + 273;

            // 열모델 지배 방정식                                           //.nBillet_Predict_Current_Billet_Temperature_304인데 위의 fPrebilletTemp는 nBillet_Predict_Current_Billet_Temperature 대입
            this.m_MainClass.stBILLET_INFOMATION[idx].nBillet_Predict_Current_Billet_Temperature_304 = ((fPreBilletTemp + 273) + (h_s * dt) * (fnfn - (fPreBilletTemp + 273)) / (dens * cp_s * thick) + (sigma * eps * f_s * dt) * (ff - fff) / (dens * cp_s * thick)) - 273;
            
            //this.m_MainClass.m_MainForm.dANGJIN_DATATableAdapter.InsertQuery(    
            //    this.m_MainClass.m_Define_Class.nDataLoggingIndex,
            //    DateTime.Now.ToString(),
            //    nZoneTemprature.ToString(),
            //    nPreditBilletTemp.ToString());

            //this.m_MainClass.stBILLET_INFOMATION[this.m_MainClass.m_Define_Class.nDataLoggingIndex].nBillet_Predict_Current_Billet_Temperature = nPreditBilletTemp;
            //this.m_MainClass.stBILLET_INFOMATION[this.m_MainClass.m_Define_Class.nDataLoggingIndex].nZone_Average_Temperature = nZoneTemprature;
        }


        public void calThermalModel_ss400()
        {
            this.m_MainClass.m_MainForm.Set_txtDanjin_Current_Date(DateTime.Now.ToString());
            TimeSpan result = DateTime.Now - this.m_MainClass.m_Define_Class.dateDataLoggingStartTime;
            this.m_MainClass.m_MainForm.Set_txtDanjin_Operation_Time("[" + this.m_MainClass.m_Define_Class.nDataLoggingIndex + "]" + result.ToString(@"h\:mm\:ss"));

            if (this.m_MainClass.m_Define_Class.nDataLoggingIndex > this.m_MainClass.m_Define_Class.MAX_BILLET_IN_FURNACE)
            {
                this.m_MainClass.m_MainForm.ShowMessageBox("당진 테스트베드 측정 데이터 갯수가 최대 갯수를 초과하였습니다. \n\r측정을 중지합니다.");
                this.m_MainClass.m_MainForm.btnDataLogging.BackColor = System.Drawing.Color.LightGray;
                this.m_MainClass.m_Define_Class.isDataLogging = false;
            }



            Random rnd = new Random();

            int nPreditBilletTemp; //예측 소재 온도
            float nZoneTemprature = this.m_MainClass.stFURNACE_REALTIME_INFORMATION.nZone_Temperature[0];     // 현재 TC 온도 

            int num_cp = 23;
            int num_h = 25;
            int num_f = 25;
            int num_fn = 601;
            int num_wp = 601;
            float dt; // unit sec 
            float dens, thick;
            float sigma, eps;
            float temp_wp_init;
            float cp_s, h_s, f_s;

            //비열 등 계수 상수 값 대입, 이후 DB에서 읽어올 내용 //테스트 용

            float[,] cp_ss400 = new float[,] { { 0, 0.43f }, { 60, 0.443256f }, { 100, 0.454393f }, { 200, 0.482319f }, { 300, 0.506226f }, { 400, 0.524857f }, { 500, 0.546377f }, { 600, 0.573047f }, { 700, 0.604825f }, { 800, 0.633881f }, { 900, 0.689105f }, { 1000, 0.741356f }, { 1100, 0.792561f }, { 1200, 0.844435f }, { 1300, 0.89229f }, { 1350, 0.873492f }, { 1400, 0.75488f }, { 1500, 0.785904f }, { 1600, 0.680648f }, { 1700, 0.64506f }, { 1800, 0.653141f }, { 1900, 0.653141f }, { 2000, 0.653141f } };


            float[,] h_ss400 = new float[,] { { 0, 120f }, { 100, 120f }, { 200, 120f }, { 300, 120f }, { 301, 120f }, { 400, 120f }, { 500, 120f }, { 600, 120f }, { 601, 120f }, { 700, 120f }, { 800, 120f }, { 900, 120f }, { 901, 120f }, { 1000, 120f }, { 1100, 120f }, { 1200, 120f }, { 1201, 120f }, { 1300, 120f }, { 1400, 120f }, { 1500, 120f }, { 1600, 120f }, { 1700, 120f }, { 1800, 120f }, { 1900, 120f }, { 2000, 120f } };


            float[,] f_ss400 = new float[,] { { 0, 0.5f }, { 100, 0.5f }, { 200, 0.5f }, { 300, 0.5f }, { 301, 0.5f }, { 400, 0.5f }, { 500, 0.5f }, { 600, 0.5f }, { 601, 0.5f }, { 700, 0.5f }, { 800, 0.5f }, { 900, 0.5f }, { 901, 0.5f }, { 1000, 0.5f }, { 1100, 0.5f }, { 1200, 0.5f }, { 1201, 0.5f }, { 1300, 0.5f }, { 1400, 0.5f }, { 1500, 0.5f }, { 1600, 0.5f }, { 1700, 0.5f }, { 1800, 0.5f }, { 1900, 0.5f }, { 2000, 0.5f } };


            //TC input data
            float[,] fn = new float[,] {	{0		 	,  20f }, 	{60		 	,  28f }, 	{120		,  36f }, 	{180		,  44f }, 	{240		,  52f }, 	{300		,  60f }, 	{360		,  68f }, 	{420		,  76f }, 	{480		,  84f }, 	{540		,  92f }, 	{600		,  100f }, 	{660		,  108f }, 	{720		,  116f }, 	{780		,  124f }, 	{840		,  132f }, 	{900		,  140f }, 	{960		,  148f }, 	{1020	 	,  156f }, 	{1080	 	,  164f }, {1140	 	,  172f }, 	{1200	 	,  180f }, 	{1260	 	,  188f }, 	{1320	 	,  196f }, 	{1380	 	,  204f }, 	{1440	 	,  212f }, 	{1500	 	,  220f }, 	{1560	 	,  228f }, {1620	 	,  236f }, 	{1680	 	,  244f }, 	{1740	 	,  252f }, 	{1800	 	,  260f }, 	{1860	 	,  268f }, 	{1920	 	,  276f }, 	{1980	 	,  284f }, 	{2040	 	,  292f }, {2100	 	,  300f }, 	{2160	 	,  308f }, 	{2220	 	,  316f }, 	{2280	 	,  324f }, 	{2340	 	,  332f }, 	{2400	 	,  340f }, 	{2460	 	,  348f }, 	{2520	 	,  356f }, {2580	 	,  364f }, 	{2640	 	,  372f }, 	{2700	 	,  380f }, 	{2760	 	,  388f }, 	{2820	 	,  396f }, 	{2880	 	,  404f }, 	{2940	 	,  412f }, 	{3000	 	,  420f }, {3060	 	,  428f }, 	{3120	 	,  436f }, 	{3180	 	,  444f }, 	{3240	 	,  452f }, 	{3300	 	,  460f }, 	{3360	 	,  468f }, 	{3420	 	,  476f }, 	{3480	 	,  484f }, {3540	 	,  492f }, 	{3600	 	,  500f }, 	{3660	 	,  500f }, 	{3720	 	,  500f }, 	{3780	 	,  500f }, 	{3840	 	,  500f }, 	{3900	 	,  500f }, 	{3960	 	,  500f }, {4020	 	,  500f }, 	{4080	 	,  500f }, 	{4140	 	,  500f }, 	{4200	 	,  500f }, 	{4260	 	,  500f }, 	{4320	 	,  500f }, 	{4380	 	,  500f }, 	{4440	 	,  500f }, {4500	 	,  500f }, 	{4560	 	,  500f }, 	{4620	 	,  500f }, 	{4680	 	,  500f }, 	{4740	 	,  500f }, 	{4800	 	,  500f }, 	{4860	 	,  500f }, 	{4920	 	,  500f }, {4980	 	,  500f }, 	{5040	 	,  500f }, 	{5100	 	,  500f }, 	{5160	 	,  500f }, 	{5220	 	,  500f }, 	{5280	 	,  500f }, 	{5340	 	,  500f }, 	{5400	 	,  500f }, {5460	 	,  505f }, 	{5520	 	,  510f }, 	{5580	 	,  515f }, 	{5640	 	,  520f }, 	{5700	 	,  525f }, 	{5760	 	,  530f }, 	{5820	 	,  535f }, 	{5880	 	,  540f }, {5940	 	,  545f }, 	{6000	 	,  550f }, 	{6060	 	,  555f }, 	{6120	 	,  560f }, 	{6180	 	,  565f }, 	{6240	 	,  570f }, 	{6300	 	,  575f }, 	{6360	 	,  580f }, {6420	 	,  585f }, 	{6480	 	,  590f }, 	{6540	 	,  595f }, 	{6600	 	,  600f }, 	{6660	 	,  605f }, 	{6720	 	,  610f }, 	{6780	 	,  615f }, 	{6840	 	,  620f }, {6900	 	,  625f }, 	{6960	 	,  630f }, 	{7020	 	,  635f }, 	{7080	 	,  640f }, 	{7140	 	,  645f }, 	{7200	 	,  650f }, 	{7260	 	,  655f }, 	{7320	 	,  660f }, {7380	 	,  665f }, 	{7440	 	,  670f }, 	{7500	 	,  675f }, 	{7560	 	,  680f }, 	{7620	 	,  685f }, 	{7680	 	,  690f }, 	{7740	 	,  695f }, 	{7800	 	,  700f }, {7860	 	,  705f }, 	{7920	 	,  710f }, 	{7980	 	,  715f }, 	{8040	 	,  720f }, 	{8100	 	,  725f }, 	{8160	 	,  730f }, 	{8220	 	,  735f }, 	{8280	 	,  740f }, {8340	 	,  745f }, 	{8400	 	,  750f }, 	{8460	 	,  755f }, 	{8520	 	,  760f }, 	{8580	 	,  765f }, 	{8640	 	,  770f }, 	{8700	 	,  775f }, 	{8760	 	,  780f }, {8820	 	,  785f }, 	{8880	 	,  790f }, 	{8940	 	,  795f }, 	{9000	 	,  800f }, 	{9060	 	,  800f }, 	{9120	 	,  800f }, 	{9180	 	,  800f }, 	{9240	 	,  800f }, {9300	 	,  800f }, 	{9360	 	,  800f }, 	{9420	 	,  800f }, 	{9480	 	,  800f }, 	{9540	 	,  800f }, 	{9600	 	,  800f }, 	{9660	 	,  800f }, 	{9720	 	,  800f }, {9780	 	,  800f }, 	{9840	 	,  800f }, 	{9900	 	,  800f }, 	{9960	 	,  800f }, 	{10020	 	,  800f }, 	{10080	 	,  800f }, 	{10140	 	,  800f }, 	{10200	 	,  800f }, {10260	 	,  800f }, 	{10320	 	,  800f }, 	{10380	 	,  800f }, 	{10440	 	,  800f }, 	{10500	 	,  800f }, 	{10560	 	,  800f }, 	{10620	 	,  800f }, 	{10680	 	,  800f }, {10740	 	,  800f }, 	{10800	 	,  800f }, 	{10860	 	,  806f }, 	{10920	 	,  813f }, 	{10980	 	,  820f }, 	{11040	 	,  826f }, 	{11100	 	,  833f }, 	{11160	 	,  840f }, {11220	 	,  846f }, 	{11280	 	,  853f }, 	{11340	 	,  860f }, 	{11400	 	,  866f }, 	{11460	 	,  873f }, 	{11520	 	,  880f }, 	{11580	 	,  886f }, 	{11640	 	,  893f }, {11700	 	,  900f }, 	{11760	 	,  906f }, 	{11820	 	,  913f }, 	{11880	 	,  920f }, 	{11940	 	,  926f }, 	{12000	 	,  933f }, 	{12060	 	,  940f }, 	{12120	 	,  946f }, {12180	 	,  953f }, 	{12240	 	,  960f }, 	{12300	 	,  966f }, 	{12360	 	,  973f }, 	{12420	 	,  980f }, 	{12480	 	,  986f }, 	{12540	 	,  993f }, 	{12600	 	,  1000f }, {12660	 	,  1003f }, 	{12720	 	,  1006f }, 	{12780	 	,  1009f }, 	{12840	 	,  1013f }, 	{12900	 	,  1016f }, 	{12960	 	,  1019f }, 	{13020	 	,  1023f }, 	{13080	 	,  1026f }, {13140	 	,  1029f }, 	{13200	 	,  1033f }, 	{13260	 	,  1036f }, 	{13320	 	,  1039f }, 	{13380	 	,  1043f }, 	{13440	 	,  1046f }, 	{13500	 	,  1049f }, 	{13560	 	,  1053f }, {13620	 	,  1056f }, 	{13680	 	,  1059f }, 	{13740	 	,  1063f }, 	{13800	 	,  1066f }, 	{13860	 	,  1069f }, 	{13920	 	,  1073f }, 	{13980	 	,  1076f }, 	{14040	 	,  1079f }, {14100	 	,  1083f }, 	{14160	 	,  1086f }, 	{14220	 	,  1089f }, 	{14280	 	,  1093f }, 	{14340	 	,  1096f }, 	{14400	 	,  1100f }, 	{14460	 	,  1102f }, 	{14520	 	,  1105f }, {14580	 	,  1108f }, 	{14640	 	,  1110f }, 	{14700	 	,  1113f }, 	{14760	 	,  1116f }, 	{14820	 	,  1118f }, 	{14880	 	,  1121f }, 	{14940	 	,  1124f }, 	{15000	 	,  1126f }, {15060	 	,  1129f }, 	{15120	 	,  1132f }, 	{15180	 	,  1134f }, 	{15240	 	,  1137f }, 	{15300	 	,  1140f }, 	{15360	 	,  1142f }, 	{15420	 	,  1145f }, 	{15480	 	,  1148f }, {15540	 	,  1150f }, 	{15600	 	,  1153f }, 	{15660	 	,  1156f }, 	{15720	 	,  1158f }, 	{15780	 	,  1161f }, 	{15840	 	,  1164f }, 	{15900	 	,  1166f }, 	{15960	 	,  1169f }, {16020	 	,  1172f }, 	{16080	 	,  1174f }, 	{16140	 	,  1177f }, 	{16200	 	,  1180f }, 	{16260	 	,  1182f }, 	{16320	 	,  1184f }, 	{16380	 	,  1186f }, 	{16440	 	,  1189f }, {16500	 	,  1191f }, 	{16560	 	,  1193f }, 	{16620	 	,  1196f }, 	{16680	 	,  1198f }, 	{16740	 	,  1200f }, 	{16800	 	,  1203f }, 	{16860	 	,  1205f }, 	{16920	 	,  1207f }, {16980	 	,  1210f }, 	{17040	 	,  1212f }, 	{17100	 	,  1214f }, 	{17160	 	,  1217f }, 	{17220	 	,  1219f }, 	{17280	 	,  1221f }, 	{17340	 	,  1224f }, 	{17400	 	,  1226f }, {17460	 	,  1228f }, 	{17520	 	,  1231f }, 	{17580	 	,  1233f }, 	{17640	 	,  1235f }, 	{17700	 	,  1238f }, 	{17760	 	,  1240f }, 	{17820	 	,  1242f }, 	{17880	 	,  1245f }, {17940	 	,  1247f }, 	{18000	 	,  1250f }, 	{18060	 	,  1250f }, 	{18120	 	,  1250f }, 	{18180	 	,  1250f }, 	{18240	 	,  1250f }, 	{18300	 	,  1250f }, 	{18360	 	,  1250f }, {18420	 	,  1250f }, 	{18480	 	,  1250f }, 	{18540	 	,  1250f }, 	{18600	 	,  1250f }, 	{18660	 	,  1250f }, 	{18720	 	,  1250f }, 	{18780	 	,  1250f }, 	{18840	 	,  1250f }, {18900	 	,  1250f }, 	{18960	 	,  1250f }, 	{19020	 	,  1250f }, 	{19080	 	,  1250f }, 	{19140	 	,  1250f }, 	{19200	 	,  1250f }, 	{19260	 	,  1250f }, 	{19320	 	,  1250f }, {19380	 	,  1250f }, 	{19440	 	,  1250f }, 	{19500	 	,  1250f }, 	{19560	 	,  1250f }, 	{19620	 	,  1250f }, 	{19680	 	,  1250f }, 	{19740	 	,  1250f }, 	{19800	 	,  1250f }, {19860	 	,  1250f }, 	{19920	 	,  1250f }, 	{19980	 	,  1250f }, 	{20040	 	,  1250f }, 	{20100	 	,  1250f }, 	{20160	 	,  1250f }, 	{20220	 	,  1250f }, 	{20280	 	,  1250f }, {20340	 	,  1250f }, 	{20400	 	,  1250f }, 	{20460	 	,  1250f }, 	{20520	 	,  1250f }, 	{20580	 	,  1250f }, 	{20640	 	,  1250f }, 	{20700	 	,  1250f }, 	{20760	 	,  1250f }, {20820	 	,  1250f }, 	{20880	 	,  1250f }, 	{20940	 	,  1250f }, 	{21000	 	,  1250f }, 	{21060	 	,  1250f }, 	{21120	 	,  1250f }, 	{21180	 	,  1250f }, 	{21240	 	,  1250f }, {21300	 	,  1250f }, 	{21360	 	,  1250f }, 	{21420	 	,  1250f }, 	{21480	 	,  1250f }, 	{21540	 	,  1250f }, 	{21600	 	,  1250f }, 	{21660	 	,  1250f }, 	{21720	 	,  1250f }, {21780	 	,  1250f }, 	{21840	 	,  1250f }, 	{21900	 	,  1250f }, 	{21960	 	,  1250f }, 	{22020	 	,  1250f }, 	{22080	 	,  1250f }, 	{22140	 	,  1250f }, 	{22200	 	,  1250f }, {22260	 	,  1250f }, 	{22320	 	,  1250f }, 	{22380	 	,  1250f }, 	{22440	 	,  1250f }, 	{22500	 	,  1250f }, 	{22560	 	,  1250f }, 	{22620	 	,  1250f }, 	{22680	 	,  1250f }, {22740	 	,  1250f }, 	{22800	 	,  1250f }, 	{22860	 	,  1250f }, 	{22920	 	,  1250f }, 	{22980	 	,  1250f }, 	{23040	 	,  1250f }, 	{23100	 	,  1250f }, 	{23160	 	,  1250f }, {23220	 	,  1250f }, 	{23280	 	,  1250f }, 	{23340	 	,  1250f }, 	{23400	 	,  1250f }, 	{23460	 	,  1250f }, 	{23520	 	,  1250f }, 	{23580	 	,  1250f }, 	{23640	 	,  1250f }, {23700	 	,  1250f }, 	{23760	 	,  1250f }, 	{23820	 	,  1250f }, 	{23880	 	,  1250f }, 	{23940	 	,  1250f }, 	{24000	 	,  1250f }, 	{24060	 	,  1250f }, 	{24120	 	,  1250f }, {24180	 	,  1250f }, 	{24240	 	,  1250f }, 	{24300	 	,  1250f }, 	{24360	 	,  1250f }, 	{24420	 	,  1250f }, 	{24480	 	,  1250f }, 	{24540	 	,  1250f }, 	{24600	 	,  1250f }, {24660	 	,  1250f }, 	{24720	 	,  1250f }, 	{24780	 	,  1250f }, 	{24840	 	,  1250f }, 	{24900	 	,  1250f }, 	{24960	 	,  1250f }, 	{25020	 	,  1250f }, 	{25080	 	,  1250f }, {25140	 	,  1250f }, 	{25200	 	,  1250f }, 	{25260	 	,  1250f }, 	{25320	 	,  1250f }, 	{25380	 	,  1250f }, 	{25440	 	,  1250f }, 	{25500	 	,  1250f }, 	{25560	 	,  1250f }, {25620	 	,  1250f }, 	{25680	 	,  1250f }, 	{25740	 	,  1250f }, 	{25800	 	,  1250f }, 	{25860	 	,  1250f }, 	{25920	 	,  1250f }, 	{25980	 	,  1250f }, 	{26040	 	,  1250f }, {26100	 	,  1250f }, 	{26160	 	,  1250f }, 	{26220	 	,  1250f }, 	{26280	 	,  1250f }, 	{26340	 	,  1250f }, 	{26400	 	,  1250f }, 	{26460	 	,  1250f }, 	{26520	 	,  1250f }, {26580	 	,  1250f }, 	{26640	 	,  1250f }, 	{26700	 	,  1250f }, 	{26760	 	,  1250f }, 	{26820	 	,  1250f }, 	{26880	 	,  1250f }, 	{26940	 	,  1250f }, 	{27000	 	,  1250f }, {27060	 	,  1250f }, 	{27120	 	,  1250f }, 	{27180	 	,  1250f }, 	{27240	 	,  1250f }, 	{27300	 	,  1250f }, 	{27360	 	,  1250f }, 	{27420	 	,  1250f }, 	{27480	 	,  1250f }, {27540	 	,  1250f }, 	{27600	 	,  1250f }, 	{27660	 	,  1250f }, 	{27720	 	,  1250f }, 	{27780	 	,  1250f }, 	{27840	 	,  1250f }, 	{27900	 	,  1250f }, 	{27960	 	,  1250f }, {28020	 	,  1250f }, 	{28080	 	,  1250f }, 	{28140	 	,  1250f }, 	{28200	 	,  1250f }, 	{28260	 	,  1250f }, 	{28320	 	,  1250f }, 	{28380	 	,  1250f }, 	{28440	 	,  1250f }, {28500	 	,  1250f }, 	{28560	 	,  1250f }, 	{28620	 	,  1250f }, 	{28680	 	,  1250f }, 	{28740	 	,  1250f }, 	{28800	 	,  1250f }, 	{28860	 	,  1250f }, 	{28920	 	,  1250f }, {28980	 	,  1250f }, 	{29040	 	,  1250f }, 	{29100	 	,  1250f }, 	{29160	 	,  1250f }, 	{29220	 	,  1250f }, 	{29280	 	,  1250f }, 	{29340	 	,  1250f }, 	{29400	 	,  1250f }, {29460	 	,  1250f }, 	{29520	 	,  1250f }, 	{29580	 	,  1250f }, 	{29640	 	,  1250f }, 	{29700	 	,  1250f }, 	{29760	 	,  1250f }, 	{29820	 	,  1250f }, 	{29880	 	,  1250f }, {29940	 	,  1250f }, 	{30000	 	,  1250f }, 	{30060	 	,  1250f }, 	{30120	 	,  1250f }, 	{30180	 	,  1250f }, 	{30240	 	,  1250f }, 	{30300	 	,  1250f }, 	{30360	 	,  1250f }, {30420	 	,  1250f }, 	{30480	 	,  1250f }, 	{30540	 	,  1250f }, 	{30600	 	,  1250f }, 	{30660	 	,  1250f }, 	{30720	 	,  1250f }, 	{30780	 	,  1250f }, 	{30840	 	,  1250f }, {30900	 	,  1250f }, 	{30960	 	,  1250f }, 	{31020	 	,  1250f }, 	{31080	 	,  1250f }, 	{31140	 	,  1250f }, 	{31200	 	,  1250f }, 	{31260	 	,  1250f }, 	{31320	 	,  1250f }, {31380	 	,  1250f }, 	{31440	 	,  1250f }, 	{31500	 	,  1250f }, 	{31560	 	,  1250f }, 	{31620	 	,  1250f }, 	{31680	 	,  1250f }, 	{31740	 	,  1250f }, 	{31800	 	,  1250f }, {31860	 	,  1250f }, 	{31920	 	,  1250f }, 	{31980	 	,  1250f }, 	{32040	 	,  1250f }, 	{32100	 	,  1250f }, 	{32160	 	,  1250f }, 	{32220	 	,  1250f }, 	{32280	 	,  1250f }, {32340	 	,  1250f }, 	{32400	 	,  1250f }, 	{32460	 	,  1250f }, 	{32520	 	,  1250f }, 	{32580	 	,  1250f }, 	{32640	 	,  1250f }, 	{32700	 	,  1250f }, 	{32760	 	,  1250f }, {32820	 	,  1250f }, 	{32880	 	,  1250f }, 	{32940	 	,  1250f }, 	{33000	 	,  1250f }, 	{33060	 	,  1250f }, 	{33120	 	,  1250f }, 	{33180	 	,  1250f }, 	{33240	 	,  1250f }, {33300	 	,  1250f }, 	{33360	 	,  1250f }, 	{33420	 	,  1250f }, 	{33480	 	,  1250f }, 	{33540	 	,  1250f }, 	{33600	 	,  1250f }, 	{33660	 	,  1250f }, 	{33720	 	,  1250f }, {33780	 	,  1250f }, 	{33840	 	,  1250f }, 	{33900	 	,  1250f }, 	{33960	 	,  1250f }, 	{34020	 	,  1250f }, 	{34080	 	,  1250f }, 	{34140	 	,  1250f }, 	{34200	 	,  1250f }, {34260	 	,  1250f }, 	{34320	 	,  1250f }, 	{34380	 	,  1250f }, 	{34440	 	,  1250f }, 	{34500	 	,  1250f }, 	{34560	 	,  1250f }, 	{34620	 	,  1250f }, 	{34680	 	,  1250f }, {34740	 	,  1250f }, 	{34800	 	,  1250f }, 	{34860	 	,  1250f }, 	{34920	 	,  1250f }, 	{34980	 	,  1250f }, 	{35040	 	,  1250f }, 	{35100	 	,  1250f }, 	{35160	 	,  1250f }, {35220	 	,  1250f }, 	{35280	 	,  1250f }, 	{35340	 	,  1250f }, 	{35400	 	,  1250f }, 	{35460	 	,  1250f }, 	{35520	 	,  1250f }, 	{35580	 	,  1250f }, 	{35640	 	,  1250f }, {35700	 	,  1250f }, 	{35760	 	,  1250f }, 	{35820	 	,  1250f }, 	{35880	 	,  1250f }, 	{35940	 	,  1250f }, 	{36000	 	,  1250f } };

            //상수 값 대입, 이후 DB에서 읽어올 내용
            dt = 60.0f;
            dens = 7851.354f;
            thick = 0.5f;        
            sigma = 0.00000008f;
            eps = 0.2f;
            temp_wp_init = 50;

            cp_s = cp_ss400[0, 0];
            h_s = h_ss400[0, 0];
            f_s = f_ss400[0, 0];


            float fPreBilletTemp;                                               // 이전 빌렛 온도 
            int idx = this.m_MainClass.m_Define_Class.nDataLoggingIndex;        // 현재 측정 인덱스 (최대치는 MAX_BILLET_IN_FURNACE  참조) 

            if (this.m_MainClass.m_Define_Class.nDataLoggingIndex == 0)
            {
                // 임의로 정의한 초기 빌렛 온도 
                fPreBilletTemp = 50.0f;
            }
            else
            {
                // 이전 계산된 빌렛 온도 
                fPreBilletTemp = this.m_MainClass.stBILLET_INFOMATION[this.m_MainClass.m_Define_Class.nDataLoggingIndex - 1].nBillet_Predict_Current_Billet_Temperature;
            }

            // 파라메타 보간 
            for (int k = 0; k < num_cp - 1; k++)
            {
                for (int j = 0; j < num_cp - 1; j++)
                {
                    if ((fPreBilletTemp >= cp_ss400[j, 0]) && (fPreBilletTemp <= cp_ss400[j + 1, 0]))
                    {
                        cp_s = cp_ss400[j, 1] + (cp_ss400[j + 1, 1] - cp_ss400[j, 1]) / (cp_ss400[j + 1, 0] - cp_ss400[j, 0]) * (fPreBilletTemp - cp_ss400[j, 0]);
                    }
                }
                for (int i = 0; i < num_h - 1; i++)
                {
                    if ((fPreBilletTemp >= h_ss400[i, 0]) && (fPreBilletTemp <= h_ss400[i + 1, 0]))
                    {
                        h_s = h_ss400[i, 1] + (h_ss400[i + 1, 1] - h_ss400[i, 1]) / (h_ss400[i + 1, 0] - h_ss400[i, 0]) * (fPreBilletTemp - h_ss400[i, 0]);
                    }
                }
                for (int j = 0; j < num_f - 1; j++)
                {
                    if ((fPreBilletTemp >= f_ss400[j, 0]) && (fPreBilletTemp <= f_ss400[j + 1, 0]))
                    {
                        f_s = f_ss400[j, 1] + (f_ss400[j + 1, 1] - f_ss400[j, 1]) / (f_ss400[j + 1, 0] - f_ss400[j, 0]) * (fPreBilletTemp - f_ss400[j, 0]);
                    }
                }
            }



            float ff = (float)(Math.Pow(fn[idx, 1], 4.0));     // 
            float fff = (float)(Math.Pow((fPreBilletTemp + 273), 4.0)); // 
            float fnfn = fn[idx, 1] + 273;


            // 열모델 지배 방정식 
            this.m_MainClass.stBILLET_INFOMATION[idx].nBillet_Predict_Current_Billet_Temperature_400 = ((fPreBilletTemp + 273) + (h_s * dt) * (fnfn - (fPreBilletTemp + 273)) / (dens * cp_s * thick) + (sigma * eps * f_s * dt) * (ff - fff) / (dens * cp_s * thick)) - 273;


            //this.m_MainClass.m_MainForm.dANGJIN_DATATableAdapter.InsertQuery(    
            //    this.m_MainClass.m_Define_Class.nDataLoggingIndex,
            //    DateTime.Now.ToString(),
            //    nZoneTemprature.ToString(),
            //    nPreditBilletTemp.ToString());

            //this.m_MainClass.stBILLET_INFOMATION[this.m_MainClass.m_Define_Class.nDataLoggingIndex].nBillet_Predict_Current_Billet_Temperature = nPreditBilletTemp;
            //this.m_MainClass.stBILLET_INFOMATION[this.m_MainClass.m_Define_Class.nDataLoggingIndex].nZone_Average_Temperature = nZoneTemprature;
        }


        public override void Run()
        {
            //this.m_MainClass.m_SysLogClass.SystemLog(this, "ThermalModelClassTimer");

            /*
            Start Data Logging 이 활성화 된 경우 실행 
            실행 주기는 열모델 연산 Delta 시간과 동일하게 DB_Timer 에 설정하면 됨. 
            */
            if (this.m_MainClass.m_Define_Class.isDataLogging)
            {
                calThermalModel_sus304();
                calThermalModel_ss400();
                this.m_MainClass.m_Define_Class.nDataLoggingIndex++;    // 열모델 배열 증가
            }
        }
    }
}